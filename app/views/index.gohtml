<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link rel="stylesheet" href="public/stylesheets/style.css">

    <title>Stereodose</title>
</head>

<body>
    <div style="margin: 20px;" class="playlists">
        <ol id="playlist-ol">
        </ol>
    </div>
    <div class="tracks">
        <ol id="tracks-ol">
        </ol>
    </div>
    <script src="public/js/temp.js"></script>


    <script src="https://sdk.scdn.co/spotify-player.js"></script>
    <!-- We will insert our code here. -->
    <script>
        let Token = {{.AccessToken}};
        window.onSpotifyWebPlaybackSDKReady = () => {
          const token = {{.AccessToken}};
          const player = new Spotify.Player({
            name: 'Web Playback SDK Quick Start Player',
            getOAuthToken: cb => { cb(token); }
          });
    
          // Error handling
          player.addListener('initialization_error', ({ message }) => { console.error(message); });
          player.addListener('authentication_error', ({ message }) => { console.error(message); });
          player.addListener('account_error', ({ message }) => { console.error(message); });
          player.addListener('playback_error', ({ message }) => { console.error(message); });
    
          // Playback status updates
          player.addListener('player_state_changed', state => { console.log(state); });
    
          // Ready
          player.addListener('ready', ({ device_id }) => {
            Main(Token, device_id);
            console.log('Ready with Device ID', device_id);
          });
    
          // Not Ready
          player.addListener('not_ready', ({ device_id }) => {
            console.log('Device ID has gone offline', device_id);
          });
    
          // Connect to the player!
          player.connect();
        };
      </script>
    <!-- <script>

        let Token = {{.AccessToken}}
        window.onSpotifyWebPlaybackSDKReady = () => {
            const token = {{.AccessToken }}
        };
        const player = new Spotify.Player({
            name: 'Web Playback SDK Quick Start Player',
            getOAuthToken: cb => { cb(token); }
        });

        // Error handling
        player.addListener('initialization_error', ({ message }) => { console.error(message); });
        player.addListener('authentication_error', ({ message }) => { console.error(message); });
        player.addListener('account_error', ({ message }) => { console.error(message); });
        player.addListener('playback_error', ({ message }) => { console.error(message); });

        // Playback status updates
        player.addListener('player_state_changed', state => { console.log(state); });

        // Ready
        player.addListener('ready', ({ device_id }) => {
            // Main is from temp.js
            Main(device_id);
            console.log('Ready with Device ID', device_id);
        });

        // Not Ready
        player.addListener('not_ready', ({ device_id }) => {
            console.log('Device ID has gone offline', device_id);
        });

        // Connect to the player!
        player.connect();
		
    </script> -->
</body>

</html>